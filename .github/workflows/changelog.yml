name: Generate Changelog

on:
  workflow_dispatch:
  pull_request:
    types: [closed]
    branches:
      - main
  push:
    branches:
      - main
    paths-ignore:
      - 'CHANGELOG.md'

permissions:
  contents: write
  pull-requests: read

jobs:
  generate:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true) || github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate changelog
        id: changelog
        run: |
          # Get the latest tag or use the initial commit if no tags exist
          LATEST_TAG=$(git describe --tags --abbrev=0 --match "v*" 2>/dev/null || git rev-list --max-parents=0 HEAD)
          
          # Start generating the changelog content
          echo "# Changelog" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "All notable changes to this project will be documented in this file." >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          
          # Get all commits since last tag
          echo "## [Unreleased]" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          
          # Features (commits that start with feat:)
          echo "### Features" >> CHANGELOG.md
          git log ${LATEST_TAG}..HEAD --pretty=format:"* %s (%h)" | grep -i "^feat:" >> CHANGELOG.md || true
          echo "" >> CHANGELOG.md
          
          # Fixes (commits that start with fix:)
          echo "### Bug Fixes" >> CHANGELOG.md
          git log ${LATEST_TAG}..HEAD --pretty=format:"* %s (%h)" | grep -i "^fix:" >> CHANGELOG.md || true
          echo "" >> CHANGELOG.md
          
          # Breaking Changes (commits with BREAKING CHANGE:)
          echo "### Breaking Changes" >> CHANGELOG.md
          git log ${LATEST_TAG}..HEAD --pretty=format:"* %s (%h)" | grep -i "BREAKING CHANGE:" >> CHANGELOG.md || true
          echo "" >> CHANGELOG.md
          
          # Other Changes
          echo "### Other Changes" >> CHANGELOG.md
          git log ${LATEST_TAG}..HEAD --pretty=format:"* %s (%h)" | grep -iv "^feat:" | grep -iv "^fix:" | grep -iv "BREAKING CHANGE:" >> CHANGELOG.md || true
          
          # Add a note about where to find previous releases
          echo "" >> CHANGELOG.md
          echo "For changes in previous releases, please check the Git history." >> CHANGELOG.md

      - name: Commit and push changelog
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add CHANGELOG.md
          git commit -m "docs: update changelog [skip ci]" || exit 0
          git push